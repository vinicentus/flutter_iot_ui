import 'package:flutter_iot_ui/core/models/sensors/generic_datamodel.dart';

class SPS30SensorDataEntry extends GenericSensorDataEntry {
  final List<num> _measurements;

  /// Mass Concentration (µg/m³) in the particle size range 0.3-1.0µm.
  get massConcentrationPM1_0 => this._measurements[0];

  ///Mass Concentration (µg/m³)  in the particle size range 0.3-2.5µm.
  get massConcentrationPM2_5 => this._measurements[1];

  ///Mass Concentration (µg/m³) in the particle size range 0.3-4.0µm.
  get massConcentrationPM4_0 => this._measurements[2];

  ///Mass Concentration (µg/m³) in the particle size range 0.3-10.0µm.
  get massConcentrationPM10 => this._measurements[3];

  ///Number Concentration (#/cm³) in the particle size range 0.3-0.5µm.
  get numberConcentrationPM0_5 => this._measurements[4];

  ///Number Concentration (#/cm³) in the particle size range 0.3-1.0µm.
  get numberConcentrationPM1_0 => this._measurements[5];

  ///Number Concentration (#/cm³) in the particle size range 0.3-2.5µm.
  get numberConcentrationPM2_5 => this._measurements[6];

  ///Number Concentration (#/cm³) in the particle size range 0.3-4.0µm.
  get numberConcentrationPM4_0 => this._measurements[7];

  ///Number Concentration (#/cm³) in the particle size range 0.3-10.0µm.
  get numberConcentrationPM10 => this._measurements[8];

  ///Typical Particle Size (µm).
  ///From the datasheet:
  ///"The typical particle size (TPS) gives an indication on the average particle diameter in the sample aerosol.
  ///Such output correlates with the weighted average of the
  ///number concentration bins measured with a TSI 3330 optical particle sizer.
  ///Consequently, lighter aerosols will have smaller TPS values than heavier aerosols."
  get typicalParticleSize => this._measurements[9];

  ///Mass Concentration (µg/m³) in the particle size range 1.0-2.5µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get massConcentrationPM2_5Subtracted =>
      this.massConcentrationPM2_5 - this.massConcentrationPM1_0;

  ///Mass Concentration (µg/m³) in the particle size range 2.5-4.0µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get massConcentrationPM4_0Subtracted =>
      this.massConcentrationPM4_0 - this.massConcentrationPM2_5;

  ///Mass Concentration (µg/m³) in the particle size range 4.0-10.0µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get massConcentrationPM10Subtracted =>
      this.massConcentrationPM10 - this.massConcentrationPM4_0;

  ///Number Concentration (#/cm³) in the particle size range 0.5-1.0µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get numberConcentrationPM1_0Subtracted =>
      this.numberConcentrationPM1_0 - this.numberConcentrationPM0_5;

  ///Number Concentration PM2.5 (#/cm³) in the particle size range 1.0-2.5µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get numberConcentrationPM2_5Subtracted =>
      this.numberConcentrationPM2_5 - this.numberConcentrationPM1_0;

  ///Number Concentration PM4.0 (#/cm³) in the particle size range 2.5-4.0µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get numberConcentrationPM4_0Subtracted =>
      this.numberConcentrationPM4_0 - this.numberConcentrationPM2_5;

  ///Number Concentration PM10 (#/cm³) in the particle size range 4.0-10.0µm.
  ///This output is generated by subtracting the smaller
  ///particle size ranges from the bigger ones.
  get numberConcentrationPM10Subtracted =>
      this.numberConcentrationPM10 - this.numberConcentrationPM4_0;

  // SPS30SensorDataEntry(DateTime timeStamp, this._measurements)
  //     : super(timeStamp);

  SPS30SensorDataEntry.createFromDB(
    String dateTime,
    num d1,
    num d2,
    num d3,
    num d4,
    num d5,
    num d6,
    num d7,
    num d8,
    num d9,
    num d10,
  )   : this._measurements = [d1, d2, d3, d4, d5, d6, d7, d8, d9, d10],
        super.createFromDB(dateTime);
}
